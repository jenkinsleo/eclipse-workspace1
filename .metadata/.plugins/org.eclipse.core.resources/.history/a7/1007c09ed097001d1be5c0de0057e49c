
public class IterativeSearcher {

	public int doBinarySearch(IntegerArray arr, int x) {
		int left = 0;
		int right = arr.length() - 1;
		int firstOccurrence = -1;
		while (left <= right) {
		int mid = left + (right - left) / 2;
		if (x == arr.read(mid)) {
		// Store the first occurrence of the element
		firstOccurrence = mid;
		// Check if the found value is the first occurrence in the array
		// by searching in the left half of the array
		right = mid - 1;
		break;
		} else if (x < arr.read(mid)) {
		// if x is less than the middle element, it can't be in the right half
		// so we don't need to check it
		right = mid - 1;
		} else {
		// if x is greater than the middle element, it can't be in the left half
		// so we don't need to check it
		left = mid + 1;
		}
		}
		return firstOccurrence;
		}
	
	

}
